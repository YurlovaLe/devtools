{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://devtools/./index.js"],"sourcesContent":["import './style.css';\n\nconst game = {\n  difficulty: undefined,\n  time: 0,\n  gameStatus: 'selection',\n  cards: [],\n  chosenCards: [],\n};\nconst appEl = document.getElementById('app');\n\nfunction renderAppSelection() {\n  const appHtml = `<div class=\"app__set\">\n  <form class=\"set\">\n    <h1 class=\"set__heading\">Выбери</br>сложность</h1>\n    <div class=\"set__level-box\">\n      <input type=\"radio\" id=\"difficulty-easy\" name=\"difficulty\" value=\"1\" class=\"set__difficulty-input\">\n      <label for=\"difficulty-easy\" class=\"set__level\">1</label>\n\n      <input type=\"radio\" id=\"difficulty-medium\" name=\"difficulty\" value=\"2\" class=\"set__difficulty-input\">\n      <label for=\"difficulty-medium\" class=\"set__level\">2</label>\n\n      <input type=\"radio\" id=\"difficulty-hard\" name=\"difficulty\" value=\"3\" class=\"set__difficulty-input\">\n      <label for=\"difficulty-hard\" class=\"set__level\">3</label>\n    </div>\n    <button type=\"submit\" class=\"button\" id=\"button\">Старт</button>\n  </form>\n  </div>`;\n  appEl.innerHTML = appHtml;\n}\n\nfunction createCardsShirts(numberOfCards) {\n  let cards = '';\n  for (let i = 0; i < numberOfCards; i++) {\n    cards =\n      cards +\n      '<div class=\"cards__shirt\"> <img src=\"./static/card_shirt.png\" alt=\"\" class=\"cards__shirt_img\"> </div>';\n  }\n  return cards;\n}\n\nfunction renderAppStartGame(numberOfCards) {\n  const appHtml = `<div class=\"app__game\">\n  <div class=\"top\">\n    <div class=\"time\">\n      <div class=\"time__name\">\n        <p>min</p>\n        <p>sek</p>\n      </div>\n      <p class=\"time__timer\">00.00</p>\n    </div>\n    <button class=\"button\">Начать заново</button>\n  </div>\n  <div class=\"cards\">\n    ${createCardsShirts(numberOfCards)}\n  </div>\n</div>\n  `;\n  appEl.innerHTML = appHtml;\n  let cards = document.querySelectorAll('.cards__shirt');\n  console.log(cards);\n  for (let i = 0; i < numberOfCards; i++) {\n    cards[i].addEventListener('click', () => {\n      if (game.chosenCards.includes(i)) {\n        return;\n      }\n      if (game.chosenCards.length < 2) {\n        let card = game.cards[i].split(' ');\n        game.chosenCards.push(i);\n        console.log(game.chosenCards);\n        cards[i].innerHTML = `<div class=\"card__name-container\">\n          <div class=\"card__name\">\n            <p class=\"card__rank\">${card[0]}</p>\n            <img src=\"./${card[1]}\" alt=\"\" class=\"card__suit_small\">\n          </div>\n        </div>\n        <div class=\"card__suit\">\n          <img src=\"./${card[1]}\" alt=\"\" class=\"card__suit_big\">\n        </div>\n        <div class=\"card__name-container reverse\">\n          <div class=\"card__name\">\n            <p class=\"card__rank\">${card[0]}</p>\n            <img src=\"./${card[1]}\" alt=\"\" class=\"card__suit_small\">\n          </div>\n        </div>\n      `;\n      }\n      if (game.chosenCards.length === 2) {\n        alert(\n          game.cards[game.chosenCards[0]] === game.cards[game.chosenCards[1]]\n            ? 'Вы победили'\n            : 'Вы проиграли',\n        );\n      }\n    });\n  }\n}\n\nconst ranks = ['A', 'K', 'Q', 'J', '10', '9', '8', '7', '6'];\nconst suits = [\n  './static/spades.svg',\n  './static/hearts.svg',\n  './static/diamonds.svg',\n  './static/clubs.svg',\n];\n\nfunction createCardDeck() {\n  let cards = [];\n  for (let j = 0; j < suits.length; j++) {\n    for (let i = 0; i < ranks.length; i++) {\n      cards.push(ranks[i] + ' ' + suits[j]);\n    }\n  }\n  return cards;\n}\n\nfunction createCards(numberOfCards) {\n  let cards = '';\n  let cardDeck = createCardDeck();\n  let randomCards = [];\n\n  for (let i = 0; i < numberOfCards / 2; i++) {\n    let randome = Math.floor(Math.random() * (36 - i));\n    randomCards.push(cardDeck[randome]);\n    randomCards.push(cardDeck[randome]);\n    cardDeck.splice(randome, 1);\n  }\n\n  for (let i = 0; i < numberOfCards; i++) {\n    let randome = Math.floor(Math.random() * (numberOfCards - i));\n    game.cards.push(randomCards[randome]);\n    randomCards.splice(randome, 1);\n  }\n  console.log(game.cards);\n\n  for (let i = 0; i < numberOfCards; i++) {\n    let card = game.cards[i].split(' ');\n    cards =\n      cards +\n      `<div class=\"card\">\n      <div class=\"card__name-container\">\n        <div class=\"card__name\">\n          <p class=\"card__rank\">${card[0]}</p>\n          <img src=\"./${card[1]}\" alt=\"\" class=\"card__suit_small\">\n        </div>\n      </div>\n      <div class=\"card__suit\">\n        <img src=\"./${card[1]}\" alt=\"\" class=\"card__suit_big\">\n      </div>\n      <div class=\"card__name-container reverse\">\n        <div class=\"card__name\">\n          <p class=\"card__rank\">${card[0]}</p>\n          <img src=\"./${card[1]}\" alt=\"\" class=\"card__suit_small\">\n        </div>\n      </div>\n    </div> \n    `;\n  }\n  return cards;\n}\n\nfunction renderAppGame(numberOfCards) {\n  const appHtml = `<div class=\"app__game\">\n  <div class=\"top\">\n    <div class=\"time\">\n      <div class=\"time__name\">\n        <p>min</p>\n        <p>sek</p>\n      </div>\n      <p class=\"time__timer\">00.00</p>\n    </div>\n    <button class=\"button\">Начать заново</button>\n  </div>\n  <div class=\"cards\">\n    ${createCards(numberOfCards)}\n  </div>\n</div>\n  `;\n  appEl.innerHTML = appHtml;\n}\n\nif (game.gameStatus === 'selection') {\n  renderAppSelection();\n  let levels = document.querySelectorAll('input[type=\"radio\"]');\n  let setButton = document.querySelector('#button');\n\n  setButton.addEventListener('click', (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    for (let level of levels) {\n      if (level.checked) {\n        game.difficulty = level.value;\n        game.gameStatus = game;\n        let numberOfCards = game.difficulty * 6;\n        renderAppGame(numberOfCards);\n        setTimeout(renderAppStartGame, 5000, numberOfCards);\n      }\n    }\n  });\n}\n\n// if (game.gameStatus === 'finish') {\n//   renderAppFinish (result, time);\n// }\n"],"names":["game","difficulty","undefined","time","gameStatus","cards","chosenCards","appEl","document","getElementById","renderAppStartGame","numberOfCards","appHtml","i","createCardsShirts","innerHTML","querySelectorAll","console","log","addEventListener","includes","length","card","split","push","alert","ranks","suits","renderAppGame","cardDeck","j","createCardDeck","randomCards","randome","Math","floor","random","splice","createCards","levels","querySelector","event","preventDefault","stopPropagation","level","checked","value","setTimeout"],"sourceRoot":""}